在Java中，**浅拷贝（Shallow Copy）和深拷贝（Deep Copy）**是两种对象复制的方式，
它们的区别主要在于复制对象时是否复制对象引用指向的其他对象。

1. 浅拷贝（Shallow Copy）
浅拷贝是指创建一个新的对象，但新对象中的基本类型字段会被复制一份，
而引用类型字段则会复制对象引用（即浅拷贝后的对象仍然指向原对象中的引用对象）。
换句话说，浅拷贝只是复制了原对象的“结构”，并没有复制其中的引用对象。

特点：
基本类型的值会被复制。
对象类型的字段会复制引用（即原对象和拷贝对象共享同一引用对象）。
浅拷贝的实现：
在Java中，可以通过 Object.clone() 方法来实现浅拷贝。
该方法会执行对象的逐字段复制，但对于引用类型字段，仅复制其引用，而不创建新的对象。

2. 深拷贝（Deep Copy）
深拷贝是指创建一个新的对象，并且递归地复制对象中的所有字段，包括引用类型的字段。
对于引用类型的字段，深拷贝不仅仅复制引用，而是会创建一个新的对象并复制原对象的内容，
这样新对象和原对象就完全独立了。
特点：
基本类型的值会被复制。
引用类型的字段会创建新的对象，并且该对象的内容被复制。

深拷贝的实现：
深拷贝通常需要手动实现，或者通过序列化/反序列化的方式来实现对象的完全复制。
一个常见的做法是递归地拷贝每一个引用类型字段。
